stages:
  - validate  # Added validation stage
  - build
  - test
  - deploy

variables:
  # Docker-related variables
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

  # Project directory paths
  FRONTEND_DIR: "./frontend"
  BACKEND_DIR: "./bicoChat_backend"

  # Added version variables for consistency
  NODE_VERSION: "20"
  MAVEN_VERSION: "3-eclipse-temurin-21"

# Template for Node.js jobs
.node_template:
  image: node:${NODE_VERSION}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-frontend-${CI_JOB_NAME}
    paths:
      - ${FRONTEND_DIR}/node_modules/
    policy: pull-push
  tags:
    - docker

# Template for Maven jobs
.maven_template:
  image: maven:${MAVEN_VERSION}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-backend-${CI_JOB_NAME}
    paths:
      - .m2/repository/
    policy: pull-push
  tags:
    - docker
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# Frontend validation (syntax and dependencies)
validate-frontend:
  extends: .node_template
  stage: validate
  script:
    - cd ${FRONTEND_DIR}
    - echo "Checking Node.js and npm versions"
    - node --version
    - npm --version
    - echo "Installing dependencies"
    - npm ci
    - echo "Verifying package.json"
    - npm ls --depth=0
    - echo "Checking for vulnerabilities"
    - npm audit --production
  allow_failure: true

# Backend validation (syntax and dependencies)
validate-backend:
  extends: .maven_template
  stage: validate
  script:
    - cd ${BACKEND_DIR}
    - echo "Checking Java and Maven versions"
    - java -version
    - mvn --version
    - echo "Validating project structure"
    - mvn validate
    - echo "Checking dependencies"
    - mvn dependency:analyze
  allow_failure: true

# Job per costruire il frontend Next.js
build-frontend:
  extends: .node_template
  stage: build
  script:
    - cd $FRONTEND_DIR
    - npm ci
    - npm run build -- --no-lint
  artifacts:
    paths:
      - $FRONTEND_DIR/.next/
    expire_in: 1 hour
  cache:
    key: ${CI_COMMIT_REF_SLUG}-frontend
    paths:
      - $FRONTEND_DIR/node_modules/
  needs:
    - validate-frontend  # Added dependency on validation

# Job per costruire il backend Spring Boot
build-backend:
  extends: .maven_template
  stage: build
  script:
    - cd $BACKEND_DIR
    - mvn package -B -DskipTests
  artifacts:
    paths:
      - $BACKEND_DIR/target/*.jar
    expire_in: 1 hour
  cache:
    key: ${CI_COMMIT_REF_SLUG}-backend
    paths:
      - $BACKEND_DIR/.m2/
  needs:
    - validate-backend  # Added dependency on validation

# Job per testare il frontend
test-frontend:
  stage: test
  image: node:20
  script:
    - cd $FRONTEND_DIR
    - npm ci
    - npm run lint
    - npm run test_selenium
  dependencies:
    - build-frontend
  cache:
    key: ${CI_COMMIT_REF_SLUG}-frontend
    paths:
      - $FRONTEND_DIR/node_modules/

# Job per testare il backend
test-backend:
  stage: test
  image: maven:3-eclipse-temurin-21
  script:
    - cd $BACKEND_DIR
    - mvn test
  dependencies:
    - build-backend
  cache:
    key: ${CI_COMMIT_REF_SLUG}-backend
    paths:
      - $BACKEND_DIR/.m2/

# Job per deploy del frontend (placeholder)
deploy-frontend:
  stage: deploy
  image: node:20
  script:
    - cd $FRONTEND_DIR
    - echo "Frontend build successfully completed"
    - echo "Deployment step will be configured in the future"
  dependencies:
    - build-frontend
  environment:
    name: staging
  only:
    - develop
  when: manual

# Job per deploy del backend (placeholder)
deploy-backend:
  stage: deploy
  image: maven:3-eclipse-temurin-21
  script:
    - cd $BACKEND_DIR
    - echo "Backend build successfully completed"
    - echo "Deployment step will be configured in the future"
  dependencies:
    - build-backend
  environment:
    name: staging
  only:
    - develop
  when: manual