Index: frontend/src/app/globals.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\n:root {\r\n  --primary-color: #4f46e5;\r\n  --primary-hover: #4338ca;\r\n  --secondary-color: #f9fafb;\r\n  --text-color: #111827;\r\n  --text-light: #6b7280;\r\n  --error-color: #ef4444;\r\n  --success-color: #10b981;\r\n  --border-color: #e5e7eb;\r\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n  --radius-sm: 0.25rem;\r\n  --radius-md: 0.375rem;\r\n  --radius-lg: 0.5rem;\r\n  --radius-full: 9999px;\r\n}\r\n\r\nbody {\r\n  color: var(--text-color);\r\n  background-color: var(--secondary-color);\r\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\n\r\n/* Layout components */\r\n.page-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  background-color: white;\r\n  box-shadow: var(--shadow-sm);\r\n  padding: 1rem;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n}\r\n\r\n.page-content {\r\n  flex: 1;\r\n  padding: 1.5rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n}\r\n\r\n.card {\r\n  background-color: white;\r\n  border-radius: var(--radius-md);\r\n  box-shadow: var(--shadow-md);\r\n  overflow: hidden;\r\n}\r\n\r\n.card-header {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.card-content {\r\n  padding: 1rem;\r\n}\r\n\r\n.card-footer {\r\n  padding: 1rem;\r\n  border-top: 1px solid var(--border-color);\r\n}\r\n\r\n/* Form elements */\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: var(--text-color);\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 0.5rem 0.75rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: var(--radius-md);\r\n  transition: border-color 0.15s, box-shadow 0.15s;\r\n}\r\n\r\n.form-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);\r\n}\r\n\r\n/* Buttons */\r\n.btn {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: var(--radius-md);\r\n  font-weight: 500;\r\n  transition: all 0.15s;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: var(--primary-hover);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: white;\r\n  color: var(--text-color);\r\n  border: 1px solid var(--border-color);\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: var(--secondary-color);\r\n}\r\n\r\n.btn-icon {\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  padding: 0;\r\n  border-radius: 50%;\r\n}\r\n\r\n.btn-floating {\r\n  position: fixed;\r\n  bottom: 1.5rem;\r\n  right: 1.5rem;\r\n  width: 3.5rem;\r\n  height: 3.5rem;\r\n  border-radius: 50%;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  box-shadow: var(--shadow-lg);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.btn-floating:hover {\r\n  background-color: var(--primary-hover);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* Badges */\r\n.badge {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: var(--radius-full);\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  padding: 0.25rem 0.5rem;\r\n}\r\n\r\n.badge-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.font-bold {\r\n  font-weight: 700;\r\n}\r\n\r\n\r\n.badge-notification {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border-radius: 50%;\r\n  font-size: 0.75rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* Chat specific styles */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.message-list {\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  padding: 12px;\r\n  display: flex;\r\n}\r\n\r\n.message-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.message-date {\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.message-date-text {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  background-color: #f3f4f6;\r\n  border-radius: var(--radius-full);\r\n  font-size: 0.75rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.message {\r\n  width: fit-content;\r\n  max-width: 75%;\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n  box-shadow: 0 1px 3px rgb(0,0,0,01);\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.75rem;\r\n  border-radius: var(--radius-md);\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out forwards;\r\n}\r\n\r\n.message-sent {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  margin-left: auto;\r\n  border-bottom-right-radius: 0;\r\n  text-align: right;\r\n}\r\n\r\n.message-received {\r\n  text-align: left;\r\n  background-color: white;\r\n  border-bottom-left-radius: 0;\r\n  box-shadow: var(--shadow-sm);\r\n}\r\n\r\n.message-time {\r\n  font-size: 0.7rem;\r\n  opacity: 0.8;\r\n  margin-top: 0.25rem;\r\n  text-align: right;\r\n}\r\n\r\n.message-input-container {\r\n  position: sticky;\r\n  bottom: 0;\r\n  background-color: white;\r\n  padding: 0.75rem;\r\n  border-top: 1px solid var(--border-color);\r\n  z-index: 10;\r\n}\r\n\r\n\r\n.message-input-form {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: var(--radius-full);\r\n  background-color: var(--secondary-color);\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n}\r\n\r\n.message-send-button {\r\n  margin-left: 0.5rem;\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  border-radius: 50%;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* User list styles */\r\n.user-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.user-list-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem 1rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n  transition: background-color 0.15s;\r\n}\r\n\r\n.user-list-item:hover {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.user-avatar {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n}\r\n\r\n.user-name {\r\n  font-weight: 500;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.user-status {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.status-indicator {\r\n  width: 0.5rem;\r\n  height: 0.5rem;\r\n  border-radius: 50%;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.status-online {\r\n  background-color: var(--success-color);\r\n}\r\n\r\n.status-offline {\r\n  background-color: var(--text-light);\r\n}\r\n\r\n/* Profile styles */\r\n.profile-header {\r\n  height: 8rem;\r\n  background-image: linear-gradient(to right, #4f46e5, #8b5cf6);\r\n}\r\n\r\n.profile-avatar-container {\r\n  margin-top: -4rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.profile-avatar {\r\n  width: 8rem;\r\n  height: 8rem;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 4px solid white;\r\n  box-shadow: var(--shadow-md);\r\n}\r\n\r\n.profile-name {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.profile-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1.5rem;\r\n  gap: 0.75rem;\r\n}\r\n\r\n/* Chat list styles */\r\n.chat-list-item {\r\n  display: flex;\r\n  padding: 1rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n  cursor: pointer;\r\n  transition: background-color 0.15s;\r\n}\r\n\r\n.chat-list-item:hover {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.chat-list-item.unread {\r\n  background-color: rgba(79, 70, 229, 0.05);\r\n}\r\n\r\n.chat-avatar {\r\n  position: relative;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.chat-avatar-image {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.chat-type-indicator {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border-radius: 50%;\r\n  background-color: #8b5cf6;\r\n  color: white;\r\n  font-size: 0.75rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid white;\r\n}\r\n\r\n.chat-info {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.chat-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.chat-time {\r\n  font-size: 0.75rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.chat-last-message {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.chat-message-preview {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 80%;\r\n}\r\n\r\n/* Animations */\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* Responsive styles */\r\n@media (max-width: 640px) {\r\n  .page-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .chat-list-item, .user-list-item {\r\n    padding: 0.75rem;\r\n  }\r\n\r\n  .message {\r\n    max-width: 85%;\r\n  }\r\n}\r\n\r\n/* Scrollbar styles */\r\n::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 3px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #a1a1a1;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/globals.css b/frontend/src/app/globals.css
--- a/frontend/src/app/globals.css	(revision f8c0f4ee6eb82c68dd9f2ba4369fceccb3a68d05)
+++ b/frontend/src/app/globals.css	(date 1743588572810)
@@ -512,4 +512,17 @@
 
 ::-webkit-scrollbar-thumb:hover {
   background: #a1a1a1;
-}
\ No newline at end of file
+}
+
+.input {
+  width: 100%;
+  padding: 0.5rem;
+  border: 1px solid #d1d5db;
+  border-radius: 0.375rem;
+  outline: none;
+  transition: border-color 0.2s;
+}
+
+.input:focus {
+  border-color: #2563eb;
+}
Index: frontend/src/app/page.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport API from '@/lib/api';\r\n\r\nexport default function Home() {\r\n  const [chats, setChats] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const user = await API.getCurrentUser();\r\n        setCurrentUser(user);\r\n\r\n        const fetchedChats = await API.getChatsWithResolvedNames();\r\n        setChats(fetchedChats);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Errore nel caricamento dei dati:', err);\r\n        setError('Errore nel caricamento delle chat.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChatClick = async (chatId) => {\r\n    try {\r\n      await API.markChatAsRead(chatId);\r\n      setChats(chats.map(chat =>\r\n          chat.id === chatId\r\n              ? { ...chat, unreadCount: 0, lastMessage: { ...chat.lastMessage, read: true } }\r\n              : chat\r\n      ));\r\n      router.push(`/chat/${chatId}`);\r\n    } catch (err) {\r\n      console.error('Errore apertura chat:', err);\r\n      setError('Impossibile aprire la chat.');\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diff = now - date;\r\n\r\n    if (diff < 24 * 60 * 60 * 1000) {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    }\r\n    if (diff < 7 * 24 * 60 * 60 * 1000) {\r\n      return date.toLocaleDateString([], { weekday: 'short' });\r\n    }\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center min-h-screen\">Caricamento...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\r\n          <div className=\"text-red-500 mb-4\">{error}</div>\r\n          <button onClick={() => window.location.reload()} className=\"btn btn-primary\">Riprova</button>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <div className=\"page-container\">\r\n        <header className=\"page-header\">\r\n          <div className=\"container mx-auto flex justify-between items-center\">\r\n            <h1 className=\"text-xl font-bold\">BicoChat</h1>\r\n            {currentUser && (\r\n                <Link href=\"/profile\" className=\"flex items-center\">\r\n                  <img\r\n                      src={currentUser.avatar || \"https://dummyimage.com/40x40/000/fff&text=U\"}\r\n                      alt={currentUser.username}\r\n                      className=\"w-8 h-8 rounded-full mr-2\"\r\n                  />\r\n                  <span>{currentUser.username}</span>\r\n                </Link>\r\n            )}\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"page-content\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h2 className=\"text-lg font-semibold\">Le tue chat</h2>\r\n            </div>\r\n\r\n            <div>\r\n              {chats.length === 0 ? (\r\n                  <div className=\"p-4 text-center text-gray-500\">Nessuna chat attiva.</div>\r\n              ) : (\r\n                  <div className=\"divide-y\">\r\n                    {chats.map(chat => (\r\n                        <div\r\n                            key={chat.id}\r\n                            className={`chat-list-item ${chat.unreadCount > 0 ? 'unread' : ''}`}\r\n                            onClick={() => handleChatClick(chat.id)}\r\n                        >\r\n                          <div className=\"chat-avatar\">\r\n                            <img\r\n                                src=\"https://dummyimage.com/48x48/000/fff&text=C\"\r\n                                alt={chat.name}\r\n                                className=\"chat-avatar-image\"\r\n                            />\r\n                            {chat.type === 'group' && <span className=\"chat-type-indicator\">G</span>}\r\n                          </div>\r\n                          <div className=\"chat-info\">\r\n                            <div className=\"chat-header\">\r\n                              <h3 className=\"chat-name\">{chat.name}</h3>\r\n                              <span className=\"chat-time\">\r\n                          {chat.lastMessage?.timestamp && formatTimestamp(chat.lastMessage.timestamp)}\r\n                        </span>\r\n                            </div>\r\n\r\n                            <div className=\"chat-last-message\">\r\n                              <p className=\"chat-message-preview\">\r\n                                {chat.type === 'group' && chat.lastMessage?.sender !== 'currentUser' && (\r\n                                    <span className=\"font-medium\">\r\n    {chat.lastMessage.senderName || 'Utente'}:{\" \"}\r\n  </span>\r\n                                )}\r\n\r\n                                {chat.lastMessage?.content}\r\n                              </p>\r\n                              {chat.unreadCount > 0 && (\r\n                                  <span className=\"badge-notification\">\r\n                            {chat.unreadCount > 9 ? \"9+\" : chat.unreadCount}\r\n                          </span>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    ))}\r\n                  </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <Link href=\"/new-chat\" className=\"btn-floating\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n          </Link>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/page.jsx b/frontend/src/app/page.jsx
--- a/frontend/src/app/page.jsx	(revision f8c0f4ee6eb82c68dd9f2ba4369fceccb3a68d05)
+++ b/frontend/src/app/page.jsx	(date 1743588764162)
@@ -22,8 +22,8 @@
         setChats(fetchedChats);
         setLoading(false);
       } catch (err) {
-        console.error('Errore nel caricamento dei dati:', err);
-        setError('Errore nel caricamento delle chat.');
+        console.error("Errore nel caricamento dei dati:", err);
+        setError("Errore nel caricamento delle chat.");
         setLoading(false);
       }
     };
@@ -31,6 +31,11 @@
     fetchData();
   }, []);
 
+  /*
+  useEffect(() => {
+    router.replace('/register');
+  }, [router]); */
+
   const handleChatClick = async (chatId) => {
     try {
       await API.markChatAsRead(chatId);
Index: frontend/src/app/register/page.jsx
===================================================================
diff --git a/frontend/src/app/register/page.jsx b/frontend/src/app/register/page.jsx
new file mode 100644
--- /dev/null	(date 1743588572785)
+++ b/frontend/src/app/register/page.jsx	(date 1743588572785)
@@ -0,0 +1,89 @@
+'use client';
+
+import { useState } from 'react';
+import { useRouter } from 'next/navigation';
+
+export default function RegisterPage() {
+    const router = useRouter();
+
+    const [email, setEmail] = useState('');
+    const [password, setPassword] = useState('');
+    const [username, setUsername] = useState('');
+    const [error, setError] = useState(null);
+    const [loading, setLoading] = useState(false);
+
+    const handleRegister = async (e) => {
+        e.preventDefault();
+        setLoading(true);
+        setError(null);
+
+        try {
+            // 🔧 Qui dovresti collegarti a Firebase Auth
+            // Simulazione (mock): salva userId e redirecta
+            const fakeUserId = `user_${Date.now()}`;
+            localStorage.setItem('currentUserId', fakeUserId);
+
+            // 🔧 Puoi anche salvare il nuovo utente nel mock-data.json (se in local)
+            // Redirect to homepage
+            router.push('/');
+        } catch (err) {
+            console.error('Errore registrazione:', err);
+            setError('Registrazione fallita. Riprova.');
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    return (
+        <div className="flex items-center justify-center min-h-screen bg-gray-100 p-4">
+            <div className="max-w-md w-full bg-white p-6 rounded-xl shadow-md">
+                <h2 className="text-2xl font-bold mb-4 text-center">Crea un account</h2>
+
+                <form onSubmit={handleRegister} className="space-y-4">
+                    <div>
+                        <label className="block text-sm font-medium">Email</label>
+                        <input
+                            type="email"
+                            required
+                            className="input"
+                            value={email}
+                            onChange={(e) => setEmail(e.target.value)}
+                        />
+                    </div>
+
+                    <div>
+                        <label className="block text-sm font-medium">Password</label>
+                        <input
+                            type="password"
+                            required
+                            className="input"
+                            value={password}
+                            onChange={(e) => setPassword(e.target.value)}
+                        />
+                    </div>
+
+                    <div>
+                        <label className="block text-sm font-medium">Username</label>
+                        <input
+                            type="text"
+                            required
+                            className="input"
+                            value={username}
+                            onChange={(e) => setUsername(e.target.value)}
+                        />
+                    </div>
+
+                    {error && <p className="text-red-500 text-sm">{error}</p>}
+
+                    <button
+                        type="submit"
+                        disabled={loading}
+                        className="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition"
+                    >
+                        {loading ? 'Registrazione...' : 'Registrati'}
+                    </button>
+                </form>
+            </div>
+        </div>
+    );
+}
